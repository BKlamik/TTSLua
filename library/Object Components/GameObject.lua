---@meta Object_Components

---# Introduction
--->### Danger
--->Component APIs are an advanced feature. An **understanding of how Unity works is required** to utilize them.
---A Component is a collection of functions and variables that allow you to control object behavior.
---
---Components are a [Unity concept](https://docs.unity3d.com/Manual/Components.html), they're the building blocks that Tabletop Simulator objects are composed of.<br><br>
---## Components
---GameObjects are themselves made up of [Components](https://api.tabletopsimulator.com/components/component/). A typical GameObject would contain a Collider, Transform, Mesh etc. These Components describe the GameObject's behavior and visual representation.
---
--->### Tip
--->In addition to built\-in Objects, the Component APIs provide access the GameObjects and Components that exist in AssetBundles. This means that when creating an AssetBundle, you may attach all manner of components (lights, sounds etc.) and you'll be able to control them via these APIs.<br><br>
---
---## Vars
---Each Component has **Vars**. These are variables which you can modify to change how that Component affects the GameObject it composes.<br><br>
---
---## Materials
---GameObjects with Renderer components typically also have attached [Materials](https://api.tabletopsimulator.com/components/material/), which govern the appearance of the object.
---
---***
---
---[Open Documentation](https://api.tabletopsimulator.com/components/introduction/)

---Every object in Tabletop Simulator is a [GameObject](https://api.tabletopsimulator.com/components/gameobject/). When a game is created, GameObjects are loaded, initialized and some of these top-level GameObjects are then exposed via Tabletop Simulator's Lua scripting APIs as regular Objects, each with their own scripting contexts.
---
---Some Lua-exposed Objects are made-up of hierarchy of children GameObjects. The Component APIs allow to access and interact with these children GameObjects (which you'd otherwise be unable to control).
---
---***
---[Open Documentation](https://api.tabletopsimulator.com/components/gameobject/)
---@class GameObject
---@field name string The name of the GameObject
---@field getChild fun(name: string):GameObject Returns a child GameObject matching the specified `name`.
---@field getChildren fun(name:string):GameObject[] Returns the list of children GameObjects.
---@field getComponent fun(name: string): Component Returns a Component matching the specified `name` from the GameObject's list of Components.
---@field getComponentInChildren fun(name: string): Component Returns a Component matching the specified `name`. Found by searching the Components of the GameObject and its [children](https://api.tabletopsimulator.com/components/gameobject/#getchildren) recursively (depth first).
---@field getComponents fun(name?: string):Component[] Returns the GameObject's list of Components. `name` is optional, when specified only Components with specified `name` will be included.
---@field getComponentsInChildren fun(name?: string): Component[] Returns a list of Components found by searching the GameObject and its [children](https://api.tabletopsimulator.com/components/gameobject/#getchildren) recursively (depth first). `name` is optional, when specified only Components with specified `name` will be included.
---@field getMaterials fun(): Material[] Returns the GameObject's list of Materials.
---@field getMaterialsInChildren fun(): Material[] Returns a list of Materials found by searching the GameObject and its [children](https://api.tabletopsimulator.com/components/gameobject/#getchildren) recursively (depth first).